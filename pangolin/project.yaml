specVersion: 1.0.0
name: apps-subql
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: 1.0.0
  query:
    name: "@subql/query"
    version: 0.24.0
description: >-
  This project can be use as a starting point for developing your SubQuery
  project
repository: "https://github.com/subquery/subql-starter"
schema:
  file: ./schema.graphql
network:
  genesisHash: "0xce44bd16fc276f9e457b452577b6c2678e57768260012af127479fed806da7e7"
  endpoint: wss://pangolin-rpc.darwinia.network
  dictionary: "https://api.subquery.network/sq/darwinia-network/pangolin-dictionary"
  chaintypes:
    file: ./types.yaml
dataSources:
  - kind: substrate/Runtime
    startBlock: 2800000
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleBlock
          kind: substrate/BlockHandler
        ################# Fee Market #################
        # Order Create
        - handler: handleToPangoroOrderCreateEvent
          kind: substrate/EventHandler
          filter:
            module: pangoroFeeMarket
            method: OrderCreated
        - handler: handleToPangolinParachainOrderCreateEvent
          kind: substrate/EventHandler
          filter:
            module: pangolinParachainFeeMarket
            method: OrderCreated
        # Order Finish
        - handler: handleToPangoroOrderFinishEvent
          kind: substrate/EventHandler
          filter:
            module: bridgePangoroMessages
            method: MessagesDelivered
        - handler: handleToPangolinParachainOrderFinishEvent
          kind: substrate/EventHandler
          filter:
            module: bridgePangolinParachainMessages
            method: MessagesDelivered
        # Order Reward
        - handler: handleToPangoroOrderRewardEvent
          kind: substrate/EventHandler
          filter:
            module: pangoroFeeMarket
            method: OrderReward
        - handler: handleToPangolinParachainOrderRewardEvent
          kind: substrate/EventHandler
          filter:
            module: pangolinParachainFeeMarket
            method: OrderReward
        # Order Slash
        - handler: handleToPangoroOrderSlashEvent
          kind: substrate/EventHandler
          filter:
            module: pangoroFeeMarket
            method: FeeMarketSlash
        - handler: handleToPangolinParachainOrderSlashEvent
          kind: substrate/EventHandler
          filter:
            module: pangolinParachainFeeMarket
            method: FeeMarketSlash
        # Fee Update
        - handler: handleToPangoroFeeUpdateEvent
          kind: substrate/EventHandler
          filter:
            module: pangoroFeeMarket
            method: UpdateRelayFee
        - handler: handleToPangolinParachainFeeUpdateEvent
          kind: substrate/EventHandler
          filter:
            module: pangolinParachainFeeMarket
            method: UpdateRelayFee
