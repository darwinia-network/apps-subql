specVersion: 1.0.0
name: apps-subql
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: 1.0.0
  query:
    name: "@subql/query"
    version: 0.24.0
description: >-
  This project can be use as a starting point for developing your SubQuery
  project
repository: "https://github.com/subquery/subql-starter"
schema:
  file: ./schema.graphql
network:
  genesisHash: "0x34f61bfda344b3fad3c3e38832a91448b3c613b199eb23e5110a635d71c13c65"
  endpoint: wss://darwinia-crab.api.onfinality.io/public-ws
  dictionary: "https://api.subquery.network/sq/darwinia-network/crab-dictionary"
  chaintypes:
    file: ./types.yaml
dataSources:
  - kind: substrate/Runtime
    startBlock: 11317310
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleBlock
          kind: substrate/BlockHandler
        ################# Fee Market #################
        # Order Create
        - handler: handleToDarwiniaOrderCreateEvent
          kind: substrate/EventHandler
          filter:
            module: darwiniaFeeMarket
            method: OrderCreated
        - handler: handleToCrabParachainOrderCreateEvent
          kind: substrate/EventHandler
          filter:
            module: crabParachainFeeMarket
            method: OrderCreated
        # Order Finish
        - handler: handleToDarwiniaOrderFinishEvent
          kind: substrate/EventHandler
          filter:
            module: bridgeDarwiniaMessages
            method: MessagesDelivered
        - handler: handleToCrabParachainOrderFinishEvent
          kind: substrate/EventHandler
          filter:
            module: bridgeCrabParachainMessages
            method: MessagesDelivered
        # Order Reward
        - handler: handleToDarwiniaOrderRewardEvent
          kind: substrate/EventHandler
          filter:
            module: darwiniaFeeMarket
            method: OrderReward
        - handler: handleToCrabParachainOrderRewardEvent
          kind: substrate/EventHandler
          filter:
            module: crabParachainFeeMarket
            method: OrderReward
        # Order Slash
        - handler: handleToDarwiniaOrderSlashEvent
          kind: substrate/EventHandler
          filter:
            module: darwiniaFeeMarket
            method: FeeMarketSlash
        - handler: handleToCrabParachainOrderSlashEvent
          kind: substrate/EventHandler
          filter:
            module: crabParachainFeeMarket
            method: FeeMarketSlash
        # Fee Update
        - handler: handleToDarwiniaFeeUpdateEvent
          kind: substrate/EventHandler
          filter:
            module: darwiniaFeeMarket
            method: UpdateRelayFee
        - handler: handleToCrabParachainFeeUpdateEvent
          kind: substrate/EventHandler
          filter:
            module: crabParachainFeeMarket
            method: UpdateRelayFee
        # Init Fee
        - handler: handleToDarwiniaInitFeeEvent
          kind: substrate/EventHandler
          filter:
            module: darwiniaFeeMarket
            method: EnrollAndLockCollateral
        - handler: handleToCrabParachainInitFeeEvent
          kind: substrate/EventHandler
          filter:
            module: crabParachainFeeMarket
            method: EnrollAndLockCollateral
